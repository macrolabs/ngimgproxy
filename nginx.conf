user  nginx;
worker_processes  auto;

error_log  stderr notice;
pid        /var/run/nginx.pid;

events {
    worker_connections 2048;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_tokens off;
    access_log  off;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  off;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=imgcache:1000m max_size=40000m;

    upstream images {
        server imgproxy:8080;

        keepalive 20;
    }

    server {
        listen 80;
        server_name images.fanwise.xyz;
        server_tokens off;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
}

    server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;

        server_name images.fanwise.xyz;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/images.fanwise.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/images.fanwise.xyz/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
        location = /stub_status {
            stub_status;
            default_type text/plain;
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8; # docker
            deny all;
        }

        location = /metrics {
            proxy_pass http://imgproxy:8081;
            proxy_buffering on;
        }

        location / {
            proxy_pass http://images;
            
            proxy_http_version 1.1;
            proxy_redirect off;
            proxy_buffering on;

            proxy_cache imgcache;
            proxy_cache_lock on;
            proxy_cache_key $request_uri;
            proxy_cache_lock_age 5s;
            proxy_cache_lock_timeout 5s;
            proxy_cache_methods GET;

            proxy_cache_valid 404 10s;
        }
    }
}
